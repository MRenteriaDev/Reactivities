{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profiles.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAtendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginFotm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoWidgetCropped.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoutes.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profile","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","listActivities","predicate","updateProfile","profile","updateFollowing","listFollowings","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profiles","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancell","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","Array","from","values","sort","b","getTime","URLSearchParams","toString","toISOString","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","loadingActivities","followings","userActivities","loadingFollowings","activeTab","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","deletedPhoto","loadUserActivities","setDisplayName","activityStore","followingCount","loadFollowings","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModel","logout","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","err","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","e","preventDefault","handleFollow","Card","Description","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","circular","ProfileCard","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","basic","secondary","clearing","floated","groupedActivities","group","divided","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","LoginForm","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","i","RegisterForm","userName","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","sub","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","negative","border","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","resetForm","onKeyPress","shiftKey","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","length","relaxed","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","whiteSpace","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","itemsPerRow","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropped","imagePreview","setCropper","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","ProfilePhotos","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoutes","Component","component","rest","location","useLocation","finally","theme","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ServerError","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b4ad492b.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 1) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"./../../../src/index\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { store } from \"../stores/store\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { Photo, Profiles } from \"../models/profiles\";\r\nimport { UserActivity } from \"../models/userActivity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n\r\n    switch (status) {\r\n      case 400:\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        } else {\r\n          toast.error(data);\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"Unauthorized\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(`activities/`, activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n  fbLogin: (accessToken: string) =>\r\n    requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n};\r\n\r\nconst Profile = {\r\n  get: (username: string) => requests.get<Profiles>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n  updateProfile: (profile: Partial<Profiles>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profiles[]>(`/follow/${username}?predicate=${predicate}`),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profile,\r\n};\r\n\r\nexport default agent;\r\n","import { Profiles } from \"./profiles\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername?: string;\r\n  isCancell: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profiles;\r\n  attendees: Profiles[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profiles {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profiles implements Profiles {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { Profiles } from \"../models/profiles\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n    }\r\n  };\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      result.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUsername\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profiles(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              (a) => a.username !== user?.username\r\n            );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profiles(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancell = !this.selectedActivity?.isCancell;\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profiles } from \"../models/profiles\";\r\nimport { UserActivity } from \"../models/userActivity\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profiles | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loadingActivities = true;\r\n  loading = false;\r\n  followings: Profiles[] = [];\r\n  userActivities: UserActivity[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profile.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profile.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.uploading = false;\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.uploading = true;\r\n    try {\r\n      await agent.Profile.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.uploading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.uploading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deletedPhoto = async (photo: Photo) => {\r\n    this.uploading = true;\r\n    try {\r\n      await agent.Profile.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.uploading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.uploading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profile.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profiles>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profile.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profiles) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profile.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username !== username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profile.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingFollowings = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../../index\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModel();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModel();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === \"connected\") {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          runInAction(() => {\r\n            this.user = user;\r\n            this.fbLoading = false;\r\n          });\r\n          history.push(\"/activities\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          runInAction(() => (this.fbLoading = false));\r\n        });\r\n    };\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: \"public_profile,email\" }\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { ServerError } from \"../models/serverError\";\r\nimport { makeAutoObservable, reaction } from \"mobx\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModel = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnectionBuilder,\r\n  HubConnection,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((err) => console.log(\"Error stablishing connection: \", err));\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt);\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.push(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stoping connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img\r\n            src=\"assets/logo.png\"\r\n            alt=\"Logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date: any) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profiles } from \"../../app/models/profiles\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profiles;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not Following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.followersCount ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Profiles } from \"../../app/models/profiles\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Image, Icon } from \"semantic-ui-react\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profiles;\r\n}\r\n\r\nexport default observer(function Profile({ profile }: Props) {\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{profile.bio}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <FollowButton profile={profile} />\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profiles } from \"../../../app/models/profiles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profiles[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAtendee({ attendees }: Props) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 2,\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import { Link } from \"react-router-dom\";\r\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport ActivityListItemAtendee from \"./ActivityListItemAtendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancell && (\r\n          <Label\r\n            color=\"red\"\r\n            content=\"Activity Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n            attached=\"top\"\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}{\" \"}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted By{\" \"}\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {\" \"}\r\n                  {activity.host?.displayName}{\" \"}\r\n                </Link>\r\n              </Item.Description>\r\n\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    Youre hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    Youre going this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAtendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header, Item, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header color=\"teal\">{group}</Header>\r\n          <Segment>\r\n            <Item.Group divided>\r\n              {activities.map((activity) => (\r\n                <ActivityListItem key={activity.id} activity={activity} />\r\n              ))}\r\n            </Item.Group>\r\n          </Segment>\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n\r\n  const { loadActivities, activityRegistry, pagination, setPagingParams } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: any;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Formik } from \"formik\";\r\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid Email or Password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login To Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"positive\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { List, Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <List>\r\n          {errors.map((err: any, i: any) => (\r\n            <List.Item key={i}>{err}</List.Item>\r\n          ))}\r\n        </List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Formik } from \"formik\";\r\nimport { Button, Form, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        userName: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign Up To Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"userName\" placeholder=\"User Name\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"positive\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Header,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginFotm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome To Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login With Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport const LoadingComponent = ({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) => {\r\n  return (\r\n    <div>\r\n      <Dimmer active={true} inverted={inverted}>\r\n        <Loader content={content} />\r\n      </Dimmer>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  rows: number;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  options: any;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Music\", value: \"music\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loading,\r\n    loadActivity,\r\n    loadingInitial,\r\n    createActivity,\r\n    updateActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(\"The activity category is required\"),\r\n    date: Yup.string().required(\"Date is required\").nullable(),\r\n    city: Yup.string().required(\"The activity city is required\"),\r\n    venue: Yup.string().required(\"The activity venue is required\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) => {\r\n        setActivity(new ActivityFormValues(activity));\r\n      });\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading Activity\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" color=\"teal\" sub />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n              name=\"date\"\r\n            />\r\n            <Header content=\"Location Details\" color=\"teal\" sub />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={loading}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              negative\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text>{comment.body}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n\r\n          <Formik\r\n            onSubmit={(values, { resetForm }) =>\r\n              commentStore.addComment(values).then(() => resetForm())\r\n            }\r\n            initialValues={{ body: \"\" }}\r\n            validationSchema={Yup.object({\r\n              body: Yup.string().required(),\r\n            })}\r\n          >\r\n            {({ isSubmitting, isValid, handleSubmit }) => (\r\n              <Form className=\"ui form\">\r\n                <Field name=\"body\">\r\n                  {(props: FieldProps) => (\r\n                    <div style={{ position: \"relative\" }}>\r\n                      <Loader active={isSubmitting} />\r\n                      <textarea\r\n                        placeholder=\"Enter your comment (Enter to submit, SHIFT + ENTER to start in new row)\"\r\n                        rows={2}\r\n                        {...props.field}\r\n                        onKeyPress={(e) => {\r\n                          if (e.key === \"Enter\" && e.shiftKey) {\r\n                            return;\r\n                          }\r\n                          if (e.key === \"Enter\" && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            isValid && handleSubmit();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Field>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { format } from \"date-fns\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancell && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link\r\n                      to={`/profiles/${activity.host?.username}`}\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancell ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              content={\r\n                activity.isCancell ? \"Re-activate Activity\" : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancell}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button onClick={updateAttendance} loading={loading} >Cancel attendance</Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancell}\r\n            onClick={updateAttendance}\r\n            loading={loading}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport {format} from 'date-fns'\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Opps, we've locked everywhere and could not find this\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return To Acivities\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header color=\"red\" as=\"h1\" content=\"Server Error\" />\r\n      <Header as=\"h5\" sub color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>\r\n            {\" \"}\r\n            {commonStore.error.details}{\" \"}\r\n          </code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModel}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update Profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid.Column width=\"16\">\r\n        <Header\r\n          floated=\"left\"\r\n          icon=\"user\"\r\n          content={`About ${profile?.displayName}`}\r\n        />\r\n        {isCurrentUser && (\r\n          <Button\r\n            floated=\"right\"\r\n            basic\r\n            content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n            onClick={() => setEditMode(!editMode)}\r\n          />\r\n        )}\r\n        <Grid.Column width='16' >\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}> {profile?.bio} </span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Column>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserActivity } from \"../../app/models/userActivity\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\r\n    profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">\r\n                    {\" \"}\r\n                    {activity.title}{\" \"}\r\n                  </Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      // Do something with the files\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image goes here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropped({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport PhotoWidgetCropped from \"./PhotoWidgetCropped\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropped\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            ></div>\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profiles } from \"../../app/models/profiles\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profiles;\r\n}\r\n\r\nexport default function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      setMainPhoto,\r\n      deletedPhoto,\r\n      uploading,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUploaded(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletedPhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              primary\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUploaded}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        loading={target === \"main\" + photo.id && uploading}\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={\"main\" + photo.id}\r\n                        disabled={photo.isMain}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && uploading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profiles } from \"../../app/models/profiles\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profiles;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: \"About\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {\" \"}\r\n          <ProfileAbout />{\" \"}\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Photos\",\r\n      render: () => <ProfilePhotos profile={profile} />,\r\n    },\r\n    {\r\n      menuItem: \"Events\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {\" \"}\r\n          <ProfileActivities />{\" \"}\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profiles } from \"../../app/models/profiles\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profiles;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { LoadingComponent } from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, profile, loadProfile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading Profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoutes({\r\n  component: Component,\r\n  ...rest\r\n}: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import \"./styles.css\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport { useEffect } from \"react\";\r\nimport { LoadingComponent } from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport PrivateRoutes from \"./PrivateRoutes\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { userStore, commonStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded) return <LoadingComponent content=\"Loading App\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" theme=\"colored\" />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoutes\r\n                  exact\r\n                  path=\"/activities\"\r\n                  component={ActivityDashboard}\r\n                />\r\n                <PrivateRoutes\r\n                  path=\"/activities/:id\"\r\n                  component={ActivityDetails}\r\n                />\r\n                <PrivateRoutes\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoutes path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <PrivateRoutes\r\n                  path=\"/profiles/:username\"\r\n                  component={ProfilePage}\r\n                />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app/layout/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { store, StoreContext } from \"./app/stores/store\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <Router history={history}>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </StoreContext.Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}