{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profiles.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAtendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginFotm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoWidgetCropped.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoutes.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profile","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","listActivities","predicate","updateProfile","profile","updateFollowing","listFollowings","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profiles","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancell","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","Array","from","values","sort","b","getTime","URLSearchParams","toString","toISOString","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","loadingActivities","followings","userActivities","loadingFollowings","activeTab","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","deletedPhoto","loadUserActivities","setDisplayName","activityStore","followingCount","loadFollowings","UserStore","creds","setToken","modalStore","closeModel","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","err","on","comment","createdAt","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","e","preventDefault","handleFollow","Card","Description","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","circular","ProfileCard","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","basic","secondary","clearing","floated","groupedActivities","group","divided","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","LoginForm","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","i","RegisterForm","userName","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","sub","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","negative","border","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","resetForm","onKeyPress","shiftKey","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","length","relaxed","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","whiteSpace","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","itemsPerRow","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropped","imagePreview","setCropper","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","ProfilePhotos","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoutes","Component","component","rest","location","useLocation","finally","theme","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ServerError","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.30d6626c.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n\n  constructor(pageNumber = 1, pageSize = 1) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"./../../../src/index\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { store } from \"../stores/store\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { Photo, Profiles } from \"../models/profiles\";\nimport { UserActivity } from \"../models/userActivity\";\nimport { PaginatedResult } from \"../models/pagination\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(\n        response.data,\n        JSON.parse(pagination)\n      );\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n\n    switch (status) {\n      case 400:\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"/not-found\");\n        }\n        if (data.errors) {\n          const modalStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modalStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modalStateErrors.flat();\n        } else {\n          toast.error(data);\n        }\n        break;\n      case 401:\n        toast.error(\"Unauthorized\");\n        break;\n      case 404:\n        history.push(\"/not-found\");\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(\"/server-error\");\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\n      .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`activities/${id}`),\n  create: (activity: ActivityFormValues) =>\n    requests.post<void>(`activities/`, activity),\n  update: (activity: ActivityFormValues) =>\n    requests.put<void>(`activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del<void>(`activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => requests.get<User>(\"/account\"),\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n  register: (user: UserFormValues) =>\n    requests.post<User>(\"/account/register\", user),\n};\n\nconst Profile = {\n  get: (username: string) => requests.get<Profiles>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(\n      `/profiles/${username}/activities?predicate=${predicate}`\n    ),\n  updateProfile: (profile: Partial<Profiles>) =>\n    requests.put(`/profiles`, profile),\n  updateFollowing: (username: string) =>\n    requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get<Profiles[]>(`/follow/${username}?predicate=${predicate}`),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profile,\n};\n\nexport default agent;\n","import { Profiles } from \"./profiles\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername?: string;\n  isCancell: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profiles;\n  attendees: Profiles[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = \"\";\n  category: string = \"\";\n  description: string = \"\";\n  date: Date | null = null;\n  city: string = \"\";\n  venue: string = \"\";\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}\n","import { User } from \"./user\";\n\nexport interface Profiles {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profiles implements Profiles {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profiles } from \"../models/profiles\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set(\"all\", true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === \"startDate\") {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== \"startDate\") this.predicate.delete(key);\n      });\n    };\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case \"startDate\":\n        this.predicate.delete(\"startDate\");\n        this.predicate.set(\"startDate\", value);\n    }\n  };\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.username === user.username\n      );\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(\n        (x) => x.username === activity.hostUsername\n      );\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profiles(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter(\n              (a) => a.username !== user?.username\n            );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profiles(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancell = !this.selectedActivity?.isCancell;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? attendee.followersCount--\n            : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profiles } from \"../models/profiles\";\nimport { UserActivity } from \"../models/userActivity\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profiles | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loadingActivities = true;\n  loading = false;\n  followings: Profiles[] = [];\n  userActivities: UserActivity[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    );\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  };\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profile.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingProfile = false));\n    }\n  };\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profile.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.uploading = false;\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.uploading = true;\n    try {\n      await agent.Profile.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.uploading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.uploading = false));\n      console.log(error);\n    }\n  };\n\n  deletedPhoto = async (photo: Photo) => {\n    this.uploading = true;\n    try {\n      await agent.Profile.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(\n            (p) => p.id !== photo.id\n          );\n          this.uploading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.uploading = false));\n      console.log(error);\n    }\n  };\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profile.listActivities(\n        username,\n        predicate!\n      );\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingActivities = false;\n      });\n    }\n  };\n\n  updateProfile = async (profile: Partial<Profiles>) => {\n    this.loading = true;\n    try {\n      await agent.Profile.updateProfile(profile);\n      runInAction(() => {\n        if (\n          profile.displayName &&\n          profile.displayName !== store.userStore.user?.displayName\n        ) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = { ...this.profile, ...(profile as Profiles) };\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profile.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.username &&\n          this.profile.username !== username\n        ) {\n          following\n            ? this.profile.followersCount++\n            : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (\n          this.profile &&\n          this.profile.username === store.userStore.user?.username\n        ) {\n          following\n            ? this.profile.followingCount++\n            : this.profile.followingCount--;\n        }\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following\n              ? profile.followersCount--\n              : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        });\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profile.listFollowings(\n        this.profile!.username,\n        predicate\n      );\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingFollowings = false;\n      });\n    }\n  };\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../../index\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModel();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(\"jwt\");\n    this.user = null;\n    history.push(\"/\");\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModel();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  };\n\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  };\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { ServerError } from \"../models/serverError\";\nimport { makeAutoObservable, reaction } from \"mobx\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem(\"jwt\");\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          window.localStorage.setItem(\"jwt\", token);\n        } else {\n          window.localStorage.removeItem(\"jwt\");\n        }\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from \"mobx\";\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n\n  closeModel = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}\n","import {\n  HubConnectionBuilder,\n  HubConnection,\n  LogLevel,\n} from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!,\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection\n        .start()\n        .catch((err) => console.log(\"Error stablishing connection: \", err));\n\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach((comment) => {\n            comment.createdAt = new Date(comment.createdAt);\n          });\n          this.comments = comments;\n        });\n      });\n\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.push(comment);\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection\n      ?.stop()\n      .catch((error) => console.log(\"Error stoping connection: \", error));\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke(\"SendComment\", values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nexport default observer(function NavBar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          <img\n            src=\"assets/logo.png\"\n            alt=\"Logo\"\n            style={{ marginRight: \"10px\" }}\n          />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to=\"/createActivity\"\n            positive\n            content=\"Create Activity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image\n            src={user?.image || \"/assets/user.png\"}\n            avatar\n            spaced=\"right\"\n          />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date: any) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profiles } from \"../../app/models/profiles\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profiles;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color=\"teal\"\n          content={profile.following ? \"Following\" : \"Not Following\"}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.followersCount ? \"Unfollow\" : \"Follow\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import React from \"react\";\nimport { Profiles } from \"../../app/models/profiles\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profiles;\n}\n\nexport default observer(function Profile({ profile }: Props) {\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{profile.bio}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <Card.Content extra>\n        <FollowButton profile={profile} />\n      </Card.Content>\n    </Card>\n  );\n});\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { List, Image, Popup } from \"semantic-ui-react\";\nimport { Profiles } from \"../../../app/models/profiles\";\nimport { Link } from \"react-router-dom\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profiles[];\n}\n\nexport default observer(function ActivityListItemAtendee({ attendees }: Props) {\n  const styles = {\n    borderColor: \"orange\",\n    borderWidth: 2,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}\n            >\n              <Image\n                bordered\n                style={attendee.following ? styles : null}\n                size=\"mini\"\n                circular\n                src={attendee.image || \"/assets/user.png\"}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n","import { Link } from \"react-router-dom\";\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport ActivityListItemAtendee from \"./ActivityListItemAtendee\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancell && (\n          <Label\n            color=\"red\"\n            content=\"Activity Cancelled\"\n            style={{ textAlign: \"center\" }}\n            attached=\"top\"\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}{\" \"}\n              </Item.Header>\n              <Item.Description>\n                Hosted By{\" \"}\n                <Link to={`/profiles/${activity.hostUsername}`}>\n                  {\" \"}\n                  {activity.host?.displayName}{\" \"}\n                </Link>\n              </Item.Description>\n\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    Youre hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    Youre going this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MM yyyy h:mm aa\")}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAtendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport { Fragment } from \"react\";\nimport { Header, Item, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nexport default observer(function ActivityList() {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header color=\"teal\">{group}</Header>\n          <Segment>\n            <Item.Group divided>\n              {activities.map((activity) => (\n                <ActivityListItem key={activity.id} activity={activity} />\n              ))}\n            </Item.Group>\n          </Segment>\n        </Fragment>\n      ))}\n    </>\n  );\n});\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{ marginTop: 25 }}>\n                <Segment.Group>\n                    <Segment style={{ minHeight: 110 }}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{ minHeight: 70 }} />\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View' />\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n\n  const { loadActivities, activityRegistry, pagination, setPagingParams } =\n    activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleNext}\n            hasMore={\n              !loadingNext &&\n              !!pagination &&\n              pagination.currentPage < pagination.totalPages\n            }\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n  type?: any;\n}\n\nexport default function MyTextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { ErrorMessage, Formik } from \"formik\";\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default function LoginForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: \"Invalid Email or Password\" }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Login To Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"positive\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import React from \"react\";\nimport { List, Message } from \"semantic-ui-react\";\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <List>\n          {errors.map((err: any, i: any) => (\n            <List.Item key={i}>{err}</List.Item>\n          ))}\n        </List>\n      )}\n    </Message>\n  );\n}\n","import { ErrorMessage, Formik } from \"formik\";\nimport { Button, Form, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default function RegisterForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: \"\",\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        userName: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Sign Up To Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"userName\" placeholder=\"User Name\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"positive\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Header, Image, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginFotm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome To Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to Activities\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Login!\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Register!\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n});\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nexport const LoadingComponent = ({\n  inverted = true,\n  content = \"Loading...\",\n}: Props) => {\n  return (\n    <div>\n      <Dimmer active={true} inverted={inverted}>\n        <Loader content={content} />\n      </Dimmer>\n    </div>\n  );\n};\n","import React from 'react'\nimport { useField } from \"formik\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n  rows: number;\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { useField } from \"formik\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n  options: any;\n}\n\nexport default function MySelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","export const categoryOptions = [\n  { text: \"Drinks\", value: \"drinks\" },\n  { text: \"Food\", value: \"food\" },\n  { text: \"Travel\", value: \"travel\" },\n  { text: \"Film\", value: \"film\" },\n  { text: \"Culture\", value: \"culture\" },\n  { text: \"Music\", value: \"music\" },\n];\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { ActivityFormValues } from \"../../../app/models/activity\";\nimport { v4 as uuid } from \"uuid\";\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const {\n    loading,\n    loadActivity,\n    loadingInitial,\n    createActivity,\n    updateActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(\n    new ActivityFormValues()\n  );\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required\"),\n    description: Yup.string().required(\"The activity description is required\"),\n    category: Yup.string().required(\"The activity category is required\"),\n    date: Yup.string().required(\"Date is required\").nullable(),\n    city: Yup.string().required(\"The activity city is required\"),\n    venue: Yup.string().required(\"The activity venue is required\"),\n  });\n\n  useEffect(() => {\n    if (id)\n      loadActivity(id).then((activity) => {\n        setActivity(new ActivityFormValues(activity));\n      });\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() =>\n        history.push(`/activities/${newActivity.id}`)\n      );\n    } else {\n      updateActivity(activity).then(() =>\n        history.push(`/activities/${activity.id}`)\n      );\n    }\n  }\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading Activity\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" color=\"teal\" sub />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => handleFormSubmit(values)}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              placeholder=\"Category\"\n              name=\"category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n              name=\"date\"\n            />\n            <Header content=\"Location Details\" color=\"teal\" sub />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={loading}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n            />\n            <Button\n              as={Link}\n              to=\"/activities\"\n              floated=\"right\"\n              negative\n              type=\"button\"\n              content=\"Cancel\"\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\n                </Comment.Metadata>\n                <Comment.Text>{comment.body}</Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n\n          <Formik\n            onSubmit={(values, { resetForm }) =>\n              commentStore.addComment(values).then(() => resetForm())\n            }\n            initialValues={{ body: \"\" }}\n            validationSchema={Yup.object({\n              body: Yup.string().required(),\n            })}\n          >\n            {({ isSubmitting, isValid, handleSubmit }) => (\n              <Form className=\"ui form\">\n                <Field name=\"body\">\n                  {(props: FieldProps) => (\n                    <div style={{ position: \"relative\" }}>\n                      <Loader active={isSubmitting} />\n                      <textarea\n                        placeholder=\"Enter your comment (Enter to submit, SHIFT + ENTER to start in new row)\"\n                        rows={2}\n                        {...props.field}\n                        onKeyPress={(e) => {\n                          if (e.key === \"Enter\" && e.shiftKey) {\n                            return;\n                          }\n                          if (e.key === \"Enter\" && !e.shiftKey) {\n                            e.preventDefault();\n                            isValid && handleSubmit();\n                          }\n                        }}\n                      />\n                    </div>\n                  )}\n                </Field>\n              </Form>\n            )}\n          </Formik>\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { format } from \"date-fns\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancell && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <strong>\n                    <Link\n                      to={`/profiles/${activity.host?.username}`}\n                      style={{ color: \"white\" }}\n                    >\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancell ? \"green\" : \"red\"}\n              floated=\"left\"\n              content={\n                activity.isCancell ? \"Re-activate Activity\" : \"Cancel Activity\"\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              disabled={activity.isCancell}\n              as={Link}\n              to={`/manage/${activity.id}`}\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button onClick={updateAttendance} loading={loading} >Cancel attendance</Button>\n        ) : (\n          <Button\n            disabled={activity.isCancell}\n            onClick={updateAttendance}\n            loading={loading}\n            color=\"teal\"\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport {format} from 'date-fns'\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({\n  activity: { attendees, host },\n}: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity: activity,\n    loadActivity,\n    loadingInitial,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + \"buggy/not-found\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + \"buggy/server-error\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios\n      .get(baseUrl + \"activities/notaguid\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Opps, we've locked everywhere and could not find this\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Return To Acivities\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n\n  return (\n    <Container>\n      <Header color=\"red\" as=\"h1\" content=\"Server Error\" />\n      <Header as=\"h5\" sub color=\"red\" content={commonStore.error?.message} />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\n          <code style={{ marginTop: \"10px\" }}>\n            {\" \"}\n            {commonStore.error.details}{\" \"}\n          </code>\n        </Segment>\n      )}\n    </Container>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModel}\n      size=\"mini\"\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n});\n","import { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\n\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\n  const {\n    profileStore: { profile, updateProfile },\n  } = useStore();\n\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n      })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className=\"ui form\">\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\n          <Button\n            positive\n            type=\"submit\"\n            loading={isSubmitting}\n            content=\"Update Profile\"\n            floated=\"right\"\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React, { useState } from \"react\";\nimport { useStore } from \"../../app/stores/store\";\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\nimport ProfileEditForm from \"./ProfileEditForm\";\nimport { observer } from \"mobx-react-lite\";\n\nexport default observer(function ProfileAbout() {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <Tab.Pane>\n      <Grid.Column width=\"16\">\n        <Header\n          floated=\"left\"\n          icon=\"user\"\n          content={`About ${profile?.displayName}`}\n        />\n        {isCurrentUser && (\n          <Button\n            floated=\"right\"\n            basic\n            content={editMode ? \"Cancel\" : \"Edit Profile\"}\n            onClick={() => setEditMode(!editMode)}\n          />\n        )}\n        <Grid.Column width='16' >\n          {editMode ? (\n            <ProfileEditForm setEditMode={setEditMode} />\n          ) : (\n            <span style={{ whiteSpace: \"pre-wrap\" }}> {profile?.bio} </span>\n          )}\n        </Grid.Column>\n      </Grid.Column>\n    </Tab.Pane>\n  );\n});\n","import React, { SyntheticEvent, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { UserActivity } from \"../../app/models/userActivity\";\nimport { useStore } from \"../../app/stores/store\";\nimport { format } from \"date-fns\";\n\nconst panes = [\n  { menuItem: \"Future events\", pane: { key: \"future\" } },\n  { menuItem: \"Past events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\n    profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">\n                    {\" \"}\n                    {activity.title}{\" \"}\n                  </Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n            floated=\"left\"\n            icon=\"user\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      // Do something with the files\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop image goes here\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropped({\n  imagePreview,\n  setCropper,\n}: Props) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\nimport PhotoWidgetCropped from \"./PhotoWidgetCropped\";\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Image\" />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropped\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className=\"img-preview\"\n              style={{ minHeight: 200, overflow: \"hidden\" }}\n            ></div>\n            <Button.Group widths={2}>\n              <Button\n                loading={loading}\n                onClick={onCrop}\n                positive\n                icon=\"check\"\n              />\n              <Button\n                disabled={loading}\n                onClick={() => setFiles([])}\n                icon=\"close\"\n              />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { SyntheticEvent, useState } from \"react\";\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo, Profiles } from \"../../app/models/profiles\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profiles;\n}\n\nexport default function ProfilePhotos({ profile }: Props) {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      setMainPhoto,\n      deletedPhoto,\n      uploading,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function handlePhotoUploaded(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    deletedPhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              primary\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handlePhotoUploaded}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        loading={target === \"main\" + photo.id && uploading}\n                        basic\n                        color=\"green\"\n                        content=\"Main\"\n                        name={\"main\" + photo.id}\n                        disabled={photo.isMain}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color=\"red\"\n                        icon=\"trash\"\n                        loading={target === photo.id && uploading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                        disabled={photo.isMain}\n                        name={photo.id}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profiles } from \"../../app/models/profiles\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileActivities from \"./ProfileActivities\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\ninterface Props {\n  profile: Profiles;\n}\n\nexport default observer(function ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n\n  const panes = [\n    {\n      menuItem: \"About\",\n      render: () => (\n        <Tab.Pane>\n          {\" \"}\n          <ProfileAbout />{\" \"}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: \"Photos\",\n      render: () => <ProfilePhotos profile={profile} />,\n    },\n    {\n      menuItem: \"Events\",\n      render: () => (\n        <Tab.Pane>\n          {\" \"}\n          <ProfileActivities />{\" \"}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: \"Followers\",\n      render: () => <ProfileFollowings />,\n    },\n    {\n      menuItem: \"Following\",\n      render: () => <ProfileFollowings />,\n    },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { Profiles } from \"../../app/models/profiles\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profiles;\n}\n\nexport default observer(function ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profile.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid } from \"semantic-ui-react\";\nimport { LoadingComponent } from \"../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadingProfile, profile, loadProfile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n\n    return () => {\n      setActiveTab(0);\n    };\n  }, [loadProfile, username, setActiveTab]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading Profile...\" />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n}\n\nexport default function PrivateRoutes({\n  component: Component,\n  ...rest\n}: Props) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n","import \"./styles.css\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport { useEffect } from \"react\";\nimport { LoadingComponent } from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoutes from \"./PrivateRoutes\";\n\nfunction App() {\n  const location = useLocation();\n  const { userStore, commonStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <LoadingComponent content=\"Loading App\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" theme=\"colored\" />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoutes\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoutes\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoutes\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoutes path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <PrivateRoutes\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}